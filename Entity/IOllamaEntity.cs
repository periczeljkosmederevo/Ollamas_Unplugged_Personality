using Ollamas_Unplugged_Personality.Enums;
using Ollamas_Unplugged_Personality.Model;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;

namespace Ollamas_Unplugged_Personality.Entity
{
    /// <summary>
    /// Defines the contract for an Ollama entity.
    /// </summary>
    public interface IOllamaEntity
    {
        #region Basic Properties

        /// <summary>
        /// Gets or sets the name of the entity.
        /// </summary>
        string Name { get; set; }

        /// <summary>
        /// Gets or sets the model used for generating responses.
        /// </summary>
        string Model { get; set; }

        /// <summary>
        /// Gets the last response generated by the entity.
        /// </summary>
        string LastResponse { get; }

        /// <summary>
        /// Gets or sets a custom prompt used for generating responses.
        /// </summary>
        string CustomPrompt { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether fact-checking is enabled.
        /// </summary>
        bool FactCheckingEnabled { get; set; }

        #endregion

        #region Conversation History

        /// <summary>
        /// Gets the conversation history 
        /// as a read-only list of conversation entries.
        /// </summary>
        List<ConversationEntry> ConversationHistory { get; }

        #endregion

        #region Personality and State Properties

        Personality Personality { get; set; }
        Gender Gender { get; set; }
        Language Language { get; set; }
        Role Role { get; set; }
        FieldOfExpertise FieldOfExpertise { get; set; }
        ResponseLength ResponseLength { get; set; }
        Tone Tone { get; set; }
        CreativityLevel CreativityLevel { get; set; }
        DetailLevel DetailLevel { get; set; }
        PolitenessLevel PolitenessLevel { get; set; }
        ConversationStyle ConversationStyle { get; set; }

        #endregion

        #region Methods

        /// <summary>
        /// Generates a response based on the provided input.
        /// </summary>
        /// <param name="input">The input string.</param>
        /// <param name="cancellationToken">The cancellation token.</param>
        /// <returns>A task representing the asynchronous operation, 
        /// with the generated response as the result.</returns>
        Task<string> GenerateResponse(string input,
                                      CancellationToken cancellationToken = default);

        /// <summary>
        /// Generates a personal profile summary of the entity.
        /// </summary>
        /// <returns>A string representing the personal profile.</returns>
        string GeneratePersonalProfile();

        #endregion
    }
}
